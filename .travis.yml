matrix:
  include:
    - os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh" PYTHONVER="2.7"
    - os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" PYTHONVER="3.5"
    - os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" PYTHONVER="3.6"
    - os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh" PYTHONVER="2.7"
    - os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" PYTHONVER="3.5"
    - os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" PYTHONVER="3.6"

install:
  - wget ${MINICONDA} -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda info -a
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda config --add channels pyiron
  - conda install -y -c conda-forge coveralls 
  - conda install conda-build anaconda-client pytables numpy 
  - conda config --set anaconda_upload yes
  - pip install .

script:
  - cd tests
  - python find_tests.py
  - cd ..
  
after_success:
  - coveralls

deploy:
  - provider: pypi
    user: pyiron
    password: ${PYPI_UPLOAD_TOKEN}
    allow_failure: true
    on:
      branch: master
  - provider: pypi
    user: pyiron
    password: ${PYPI_UPLOAD_TOKEN}
    allow_failure: true
    on:
      tags: true
  - provider: script
    script: conda build --python ${PYTHONVER} --user pyiron --token ${CONDA_UPLOAD_TOKEN} conda/pyiron_base
    on:
      branch: master
  - provider: script
    script: conda build --python ${PYTHONVER} --user pyiron --token ${CONDA_UPLOAD_TOKEN} conda/pyiron_base
    on:
      tags: true
