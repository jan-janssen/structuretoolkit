matrix:
  include:
    - os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh" PYTHONVER="2.7"
    - os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" PYTHONVER="3.6"
    - os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh" PYTHONVER="2.7"
    - os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" PYTHONVER="3.6"

install:
  - wget ${MINICONDA} -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - git clone https://github.com/pyiron/continuous_integration_support.git .ci_support
  - conda info -a
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install conda-build conda-verify anaconda-client pytables numpy h5io h5py cycler pyparsing kiwisolver matplotlib pandas pathlib2 sqlalchemy
  - conda config --add channels pyiron
  - conda config --add channels conda-forge
  - conda install -y coveralls coverage
  - conda config --set anaconda_upload yes
  - pip install .

script:
  - cd tests
  - python find_tests.py
  - cd ..
  - ./.ci_support/build_notebooks_on_master.sh
  - cd tests
  
after_success:
  - coveralls
  - cd ..

deploy:
  - provider: pypi
    user: pyiron
    password: ${PYPI_UPLOAD_TOKEN}
    allow_failure: true
    on:
      branch: master
      condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
  - provider: pypi
    user: pyiron
    password: ${PYPI_UPLOAD_TOKEN}
    allow_failure: true
    on:
      tags: true
      condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
  - provider: script
    script: conda build --python ${PYTHONVER} --user pyiron --token ${CONDA_UPLOAD_TOKEN} conda/pyiron_base
    on:
      branch: master
      condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
  - provider: script
    script: conda build --python ${PYTHONVER} --user pyiron --token ${CONDA_UPLOAD_TOKEN} conda/pyiron_base
    on:
      tags: true
      condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
#  - provider: script
#    script: ./.ci_support/build_docker_on_master.sh
#    on:
#      branch: master
#      condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
#  - provider: script
#    script: ./.ci_support/build_docker_on_release.sh
#    on:
#      tags: true
#      condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
