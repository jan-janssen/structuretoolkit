matrix:
  include:
    - stage: test
      name: test_linux_2_7
      os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh" PYTHONVER="2.7"
      install:
        - wget ${MINICONDA} -O miniconda.sh
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda info -a
        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda
        - conda install conda-build conda-verify anaconda-client psutil pytables numpy lxml scipy cycler pyparsing kiwisolver matplotlib Werkzeug itsdangerous flask sqlalchemy pathlib2 pandas h5py
        - conda config --add channels conda-forge
        - conda config --add channels pyiron
        - conda config --set anaconda_upload yes
        - conda install -y -c conda-forge coveralls coverage ase spglib h5io phonopy
        - pip install --pre .

      script:
        - echo -e "[DEFAULT]\nTOP_LEVEL_DIRS = $PWD\nRESOURCE_PATHS = $PWD/tests/static" > ~/.pyiron
        - coverage run -m unittest discover tests
        - ./.ci_support/build_notebooks_on_master.sh

      after_success:
        - coveralls

      deploy:
      - provider: pypi
        user: pyiron
        password: ${PYPI_UPLOAD_TOKEN}
        allow_failure: true
        on:
          branch: master
          condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
      - provider: pypi
        user: pyiron
        password: ${PYPI_UPLOAD_TOKEN}
        allow_failure: true
        on:
          tags: true
          condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
      - provider: script
        script: conda build --python ${PYTHONVER} --user pyiron --token ${CONDA_UPLOAD_TOKEN} conda/pyiron
        on:
          branch: master
          condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"
      - provider: script
        script: conda build --python ${PYTHONVER} --user pyiron --token ${CONDA_UPLOAD_TOKEN} conda/pyiron
        on:
          tags: true
          condition: "${PYTHONVER} = 3.6 && ${TRAVIS_OS_NAME} = linux"

    - name: test_linux_3_6
      os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" PYTHONVER="3.6"
    - name: test_osx_2_7
      os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh" PYTHONVER="2.7"
    - name: test_osx_3_6
      os: osx
      language: generic
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" PYTHONVER="3.6"
    - stage: documentation
      if: branch = master
      name: documentation
      os: linux
      language: python
      env: MINICONDA="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" PYTHONVER="3.6"
      script:
        - ./.ci_support/build_docs_on_master.sh
      deploy:
        - provider: pages
          repo: pyiron/pyiron.github.io
          target_branch: master
          skip_cleanup: true
          github_token: $GH_TOKEN
          local_dir: ../pyiron.github.io
          on:
            branch: master
    - stage: docker
      if: branch = master
      name: docker
      sudo: required
      services:
        - docker
      language: generic
      env:
        global:
          - COMMIT=${TRAVIS_COMMIT::8}
      script:
        - mv binder/docker/* .
        - docker build -t pyiron -f ./Dockerfile .
      deploy:
        - provider: script
          skip_cleanup: true
          script: ./deploy.sh
          on:
             all_branches: true
             repo: pyiron/examples
